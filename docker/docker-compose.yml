version: "3.8"

services:
  # Backend FastAPI service
  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile
    container_name: career-catalyst-backend
    restart: unless-stopped
    volumes:
      - ../backend:/app
      - backend_data:/app/data
    ports:
      - "8000:8000"
    environment:
      - MONGO_URI=mongodb://app_user:${MONGO_APP_PASSWORD:-app_password}@mongodb:27017/career_catalyst
      - DATABASE_NAME=career_catalyst
      - SECRET_KEY=${JWT_SECRET_KEY:-your-secret-key-for-jwt-please-change-in-production}
      - GEMINI_API_KEY=${GEMINI_API_KEY:-}
      - DEBUG=True
      - ENVIRONMENT=development
    depends_on:
      - mongodb
    networks:
      - app-network

  # Frontend service
  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    container_name: career-catalyst-frontend
    restart: unless-stopped
    volumes:
      - ../frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    environment:
      - VITE_API_URL=http://localhost/api
      - NODE_ENV=development
    networks:
      - app-network

  # MongoDB database service
  mongodb:
    image: mongo:latest
    container_name: career-catalyst-mongodb
    restart: always
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USERNAME:-admin}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD:-password}
      - MONGO_INITDB_DATABASE=career_catalyst
      - MONGO_APP_PASSWORD=${MONGO_APP_PASSWORD:-app_password}
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - app-network
    command: [--auth]

  # Nginx reverse proxy
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: career-catalyst-nginx
    restart: unless-stopped
    ports:
      - "80:80"
    depends_on:
      - backend
      - frontend
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mongodb_data:
    driver: local
  mongodb_config:
    driver: local
  backend_data:
    driver: local
